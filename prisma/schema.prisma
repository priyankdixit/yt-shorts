// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(cuid())
  clerkUserId  String       @unique
  name         String
  email        String
  createdAt    DateTime     @default(now())
  updateAt     DateTime     @updatedAt
  shorts       Shorts[]
  comments     Comment[]
  shortViews   ShortView[]
}

model Shorts {
  id          String       @id @default(cuid())
  title       String
  description String
  url         String
  userId      String
  viewsCount  Int          @default(0)
  createdAt   DateTime     @default(now())
  updateAt    DateTime     @updatedAt

  user        User         @relation(fields: [userId], references: [id])
  comments    Comment[]    // relation declared without onDelete here
  views       ShortView[]  // relation declared without onDelete here
}

model Comment {
  id        String   @id @default(cuid())
  text      String
  createdAt DateTime @default(now())
  shortId   String
  userId    String

  short Shorts @relation(fields: [shortId], references: [id], onDelete: Cascade)
  user  User   @relation(fields: [userId], references: [id])
}

model ShortView {
  id        String   @id @default(cuid())
  shortId   String
  userId    String
  viewedAt  DateTime @default(now())

  short Shorts @relation(fields: [shortId], references: [id], onDelete: Cascade)
  user  User   @relation(fields: [userId], references: [id])

  @@unique([shortId, userId])
}
